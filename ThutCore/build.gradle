
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven { url = "http://maven.cil.li/" }
    maven {url 'http://maven.epoxide.xyz'}
}
dependencies {
    compile "li.cil.oc:OpenComputers:MC${version_oc}:api"
    compile "net.darkhax.tesla:Tesla:${version_tesla}"
}

group= "thut" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "thutcore"

minecraft {
    version = "${version_minecraft}-${version_forge}"
    mappings = "${version_mappings}"
    runDir = "run"
    
    replace "@VERSION@", project.version
    replaceIn "ThutCoreReference.java"
    replace "@MCVERSION", "${version_mcsupport}"
    replaceIn "ThutCoreReference.java"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

version = "${version_minecraft}-${version}"

jar {
        manifest {
        attributes 'FMLAT': 'thut_at.cfg'
                        
    }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

task srcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives deobfJar
}
